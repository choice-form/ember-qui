.header {
  & + .control.choice {
    padding-top: 0;
  }
}

.choice {
  padding-top: 0;
}

.ui-choice {
  position: relative;
  & input {
    margin: auto 0;

    .absolute(0, 0, 0, auto);
    .input(1.5rem, 1.5rem);
  }
  & label {
    display: block;
    padding: 1.5rem 2.5rem 1.5rem 0;
    cursor: pointer;
    vertical-align: middle;
    white-space: normal;
    word-wrap: break-word;
    & .effect-container {
      width: 1.5rem;
      height: 1.5rem;
      margin: auto 0;

      .absolute(0, 0, 0, auto);
      & .svg-wrapper {
        & svg {
          display: block;
          width: 1.5rem;
          height: 1.5rem;
        }
      }
    }
    & span {
      font-size: 1.2rem;
      line-height: 1.5rem;
      display: block;
    }
  }
}

/*------------------- fix -------------------*/

.ui-choice-fix() {
  .ui-choice {
    .border(0, 0, auto, 0, 1px, .3);
    &:first-of-type {
      &:before {
        display: none;
      }
    }
  }
}


html.ie {
  .ui-choice-fix();
}

@supports not(display: flex) {
  .ui-choice-fix();
}

/*------------------- supports -------------------*/

.ui-choice-supports() {
  .ui-choice {
    &:not(:first-of-type) {
      .border(0, 0, auto, 0, 1px, .3);
    }
  }
}

html.internet,
html.edge {
  .ui-choice-supports();
}

@supports (display: flex) {
  .ui-choice-supports();
}

/*------------------- responsive -------------------*/

html.desktop {
  & .ui-choice {
    & input:focus {
      & + label:before {
        opacity: .1;
      }
    }
    & input:checked {
      & + label:before {
        opacity: 0;
      }
    }
    & label {
      &:hover:before {
        opacity: .1;
      }
      &:before {
        content: '';
        transition: opacity 200ms ease;
        pointer-events: none;
        opacity: 0;
        border-radius: @radius-m;

        .absolute(1rem, -.5rem, 1rem, -.5rem);
      }
    }
  }
}
